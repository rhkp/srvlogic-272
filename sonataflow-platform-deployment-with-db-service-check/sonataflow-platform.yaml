apiVersion: sonataflow.org/v1alpha08
kind: SonataFlowPlatform
metadata:
  name: sonataflow-platform
spec:
  build:
    config:
      strategyOptions:
        KanikoBuildCacheEnabled: "true"
  services:
    dataIndex:
      enabled: true
      persistence:
        postgresql:
          jdbcUrl: jdbc:postgresql://postgres:5432/sonataflow?currentSchema=data-index-service
          secretRef:
            name: postgres-secrets
            userKey: POSTGRES_USER
            passwordKey: POSTGRES_PASSWORD
      podTemplate:
        container:
          env:
            # by now, when the WF persistence is initialized we don't set migration to true.
            # we can re-evaluate to default to true.
            - name: QUARKUS_FLYWAY_MIGRATE_AT_START
              value: 'false'            
        initContainers:
          - name: di-init-hello
            image: busybox:1.28
            command: ['sh', '-c', 'echo The DI will be deployed!']
          - name: init-postgres
            image: registry.access.redhat.com/ubi9/ubi-minimal:latest
            imagePullPolicy: IfNotPresent
            command: [ 'sh', '-c', 'until (echo 1 > /dev/tcp/postgres.$(cat /var/run/secrets/kubernetes.io/serviceaccount/namespace).svc.cluster.local/5432) >/dev/null 2>&1; do echo "Waiting for postgres server"; sleep 3; done;' ]
    jobService:
      enabled: true
      persistence:
        postgresql:
          jdbcUrl: jdbc:postgresql://postgres:5432/sonataflow?currentSchema=jobs-service
          secretRef:
            name: postgres-secrets
            userKey: POSTGRES_USER
            passwordKey: POSTGRES_PASSWORD
      podTemplate:
        container:
          env:
            # by now, when the WF persistence is initialized we don't set migration to true.
            # we can re-evaluate to default to true.
            - name: QUARKUS_FLYWAY_MIGRATE_AT_START
              value: 'false'            
        initContainers:
          - name: js-init-hello
            image: busybox:1.28
            command: ['sh', '-c', 'echo The JS will be deployed!']
          - name: init-postgres
            image: registry.access.redhat.com/ubi9/ubi-minimal:latest
            imagePullPolicy: IfNotPresent
            command: [ 'sh', '-c', 'until (echo 1 > /dev/tcp/postgres.$(cat /var/run/secrets/kubernetes.io/serviceaccount/namespace).svc.cluster.local/5432) >/dev/null 2>&1; do echo "Waiting for postgres server"; sleep 3; done;' ]